{"ast":null,"code":"import _asyncToGenerator from \"C:/Project/DmxLightV2/LightMixerAngular/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\nimport { LogLevel } from \"./ILogger\";\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\nexport class FetchHttpClient extends HttpClient {\n  constructor(logger) {\n    super();\n    this._logger = logger;\n    if (typeof fetch === \"undefined\") {\n      // In order to ignore the dynamic require in webpack builds we need to do this magic\n      // @ts-ignore: TS doesn't know about these names\n      const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\n      // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\n      this._jar = new (requireFunc(\"tough-cookie\").CookieJar)();\n      this._fetchType = requireFunc(\"node-fetch\");\n      // node-fetch doesn't have a nice API for getting and setting cookies\n      // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\n      this._fetchType = requireFunc(\"fetch-cookie\")(this._fetchType, this._jar);\n    } else {\n      this._fetchType = fetch.bind(getGlobalThis());\n    }\n    if (typeof AbortController === \"undefined\") {\n      // In order to ignore the dynamic require in webpack builds we need to do this magic\n      // @ts-ignore: TS doesn't know about these names\n      const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\n      // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\n      this._abortControllerType = requireFunc(\"abort-controller\");\n    } else {\n      this._abortControllerType = AbortController;\n    }\n  }\n  /** @inheritDoc */\n  send(request) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Check that abort was not signaled before calling send\n      if (request.abortSignal && request.abortSignal.aborted) {\n        throw new AbortError();\n      }\n      if (!request.method) {\n        throw new Error(\"No method defined.\");\n      }\n      if (!request.url) {\n        throw new Error(\"No url defined.\");\n      }\n      const abortController = new _this._abortControllerType();\n      let error;\n      // Hook our abortSignal into the abort controller\n      if (request.abortSignal) {\n        request.abortSignal.onabort = () => {\n          abortController.abort();\n          error = new AbortError();\n        };\n      }\n      // If a timeout has been passed in, setup a timeout to call abort\n      // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\n      let timeoutId = null;\n      if (request.timeout) {\n        const msTimeout = request.timeout;\n        timeoutId = setTimeout(() => {\n          abortController.abort();\n          _this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\n          error = new TimeoutError();\n        }, msTimeout);\n      }\n      if (request.content === \"\") {\n        request.content = undefined;\n      }\n      if (request.content) {\n        // Explicitly setting the Content-Type header for React Native on Android platform.\n        request.headers = request.headers || {};\n        if (isArrayBuffer(request.content)) {\n          request.headers[\"Content-Type\"] = \"application/octet-stream\";\n        } else {\n          request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\n        }\n      }\n      let response;\n      try {\n        response = yield _this._fetchType(request.url, {\n          body: request.content,\n          cache: \"no-cache\",\n          credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\n          headers: {\n            \"X-Requested-With\": \"XMLHttpRequest\",\n            ...request.headers\n          },\n          method: request.method,\n          mode: \"cors\",\n          redirect: \"follow\",\n          signal: abortController.signal\n        });\n      } catch (e) {\n        if (error) {\n          throw error;\n        }\n        _this._logger.log(LogLevel.Warning, `Error from HTTP request. ${e}.`);\n        throw e;\n      } finally {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (request.abortSignal) {\n          request.abortSignal.onabort = null;\n        }\n      }\n      if (!response.ok) {\n        const errorMessage = yield deserializeContent(response, \"text\");\n        throw new HttpError(errorMessage || response.statusText, response.status);\n      }\n      const content = deserializeContent(response, request.responseType);\n      const payload = yield content;\n      return new HttpResponse(response.status, response.statusText, payload);\n    })();\n  }\n  getCookieString(url) {\n    let cookies = \"\";\n    if (Platform.isNode && this._jar) {\n      // @ts-ignore: unused variable\n      this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\n    }\n    return cookies;\n  }\n}\nfunction deserializeContent(response, responseType) {\n  let content;\n  switch (responseType) {\n    case \"arraybuffer\":\n      content = response.arrayBuffer();\n      break;\n    case \"text\":\n      content = response.text();\n      break;\n    case \"blob\":\n    case \"document\":\n    case \"json\":\n      throw new Error(`${responseType} is not supported.`);\n    default:\n      content = response.text();\n      break;\n  }\n  return content;\n}","map":{"version":3,"names":["AbortError","HttpError","TimeoutError","HttpClient","HttpResponse","LogLevel","Platform","getGlobalThis","isArrayBuffer","FetchHttpClient","constructor","logger","_logger","fetch","requireFunc","__webpack_require__","__non_webpack_require__","require","_jar","CookieJar","_fetchType","bind","AbortController","_abortControllerType","send","request","abortSignal","aborted","method","Error","url","abortController","error","onabort","abort","timeoutId","timeout","msTimeout","setTimeout","log","Warning","content","undefined","headers","response","body","cache","credentials","withCredentials","mode","redirect","signal","e","clearTimeout","ok","errorMessage","deserializeContent","statusText","status","responseType","payload","getCookieString","cookies","isNode","getCookies","c","join","arrayBuffer","text"],"sources":["C:/Project/DmxLightV2/LightMixerAngular/node_modules/@microsoft/signalr/dist/esm/FetchHttpClient.js"],"sourcesContent":["// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpResponse } from \"./HttpClient\";\r\nimport { LogLevel } from \"./ILogger\";\r\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\r\nexport class FetchHttpClient extends HttpClient {\r\n    constructor(logger) {\r\n        super();\r\n        this._logger = logger;\r\n        if (typeof fetch === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this._jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n            this._fetchType = requireFunc(\"node-fetch\");\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this._fetchType = requireFunc(\"fetch-cookie\")(this._fetchType, this._jar);\r\n        }\r\n        else {\r\n            this._fetchType = fetch.bind(getGlobalThis());\r\n        }\r\n        if (typeof AbortController === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this._abortControllerType = requireFunc(\"abort-controller\");\r\n        }\r\n        else {\r\n            this._abortControllerType = AbortController;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    async send(request) {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n        const abortController = new this._abortControllerType();\r\n        let error;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n        if (request.content === \"\") {\r\n            request.content = undefined;\r\n        }\r\n        if (request.content) {\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            request.headers = request.headers || {};\r\n            if (isArrayBuffer(request.content)) {\r\n                request.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            }\r\n            else {\r\n                request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\r\n            }\r\n        }\r\n        let response;\r\n        try {\r\n            response = await this._fetchType(request.url, {\r\n                body: request.content,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method,\r\n                mode: \"cors\",\r\n                redirect: \"follow\",\r\n                signal: abortController.signal,\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this._logger.log(LogLevel.Warning, `Error from HTTP request. ${e}.`);\r\n            throw e;\r\n        }\r\n        finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n        if (!response.ok) {\r\n            const errorMessage = await deserializeContent(response, \"text\");\r\n            throw new HttpError(errorMessage || response.statusText, response.status);\r\n        }\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n        return new HttpResponse(response.status, response.statusText, payload);\r\n    }\r\n    getCookieString(url) {\r\n        let cookies = \"\";\r\n        if (Platform.isNode && this._jar) {\r\n            // @ts-ignore: unused variable\r\n            this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\nfunction deserializeContent(response, responseType) {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n    return content;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}