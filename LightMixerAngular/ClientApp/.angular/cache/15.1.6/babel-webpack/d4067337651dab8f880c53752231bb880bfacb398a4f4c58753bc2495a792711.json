{"ast":null,"code":"import { SignalrService } from './SignalrService';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction FetchDataComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchDataComponent_table_4_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const scene_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(scene_r3.name);\n  }\n}\nfunction FetchDataComponent_table_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 4)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"tbody\");\n    i0.ɵɵtemplate(6, FetchDataComponent_table_4_tr_6_Template, 3, 1, \"tr\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.scenes);\n  }\n}\nexport class FetchDataComponent {\n  constructor(http, baseUrl) {\n    this.scenes = [];\n    this.IsBeat = false;\n    this.BeatColor = '#F44336';\n    this.NonBeatColor = '#000000';\n    this.Color = '#000000';\n    this.TrackName = 'NA';\n    http.get(environment.apiUrl + 'scenes').subscribe(result => {\n      this.scenes = result;\n    }, error => console.error(error));\n    var signalR = new SignalrService();\n    signalR.startConnection().then(() => {\n      signalR.listenToAllFeeds();\n    });\n    const subscriber = {\n      next: trackInfo => {\n        this.ProcessNewTrackInfo(trackInfo);\n      },\n      error: function (err) {\n        console.log('Error');\n      },\n      complete: function () {\n        console.log('Done');\n      }\n    };\n    this.allFeedSubscription = signalR.AllFeedObservable.subscribe(subscriber);\n  }\n  ProcessNewTrackInfo(trackInfo) {\n    console.log('Received TrackInfo:', trackInfo);\n    this.IsBeat = trackInfo.isBeat;\n    if (trackInfo.trackInfo != this.TrackName) {\n      this.TrackName = trackInfo.trackInfo;\n    }\n    if (this.IsBeat) {\n      this.Color = this.BeatColor;\n    } else {\n      this.Color = this.NonBeatColor;\n    }\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 5,\n  vars: 5,\n  consts: [[2, \"height\", \"25px\", \"width\", \"25px\"], [\"id\", \"tableLabel\", \"back\", \"\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"h1\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, FetchDataComponent_p_3_Template, 3, 0, \"p\", 2);\n      i0.ɵɵtemplate(4, FetchDataComponent_table_4_Template, 7, 1, \"table\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"background-color\", ctx.Color);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.TrackName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.scenes == null ? null : ctx.scenes.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.scenes.length);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}