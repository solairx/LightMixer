{"ast":null,"code":"import { SignalrService } from './SignalrService';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction FetchDataComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchDataComponent_table_5_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const scene_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(scene_r3.name);\n  }\n}\nfunction FetchDataComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"tbody\");\n    i0.ɵɵtemplate(6, FetchDataComponent_table_5_tr_6_Template, 3, 1, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.scenes);\n  }\n}\nexport class FetchDataComponent {\n  constructor(http, baseUrl) {\n    this.scenes = [];\n    http.get('https://localhost:7133/' + 'scenes').subscribe(result => {\n      this.scenes = result;\n    }, error => console.error(error));\n    var signalR = new SignalrService();\n    signalR.startConnection();\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Weather forecast\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FetchDataComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(5, FetchDataComponent_table_5_Template, 7, 1, \"table\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.scenes == null ? null : ctx.scenes.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.scenes.length);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAKA,SAASA,cAAc,QAAQ,kBAAkB;;;;;;ICDjDC,yBAA2B;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAS1CA,0BAAiC;IAC3BA,YAAgB;IAAAA,iBAAK;;;;IAArBA,eAAgB;IAAhBA,mCAAgB;;;;;IAR1BA,gCAAsF;IAG5EA,oBAAI;IAAAA,iBAAK;IAGjBA,6BAAO;IACLA,yEAEK;IACPA,iBAAQ;;;;IAHgBA,eAAS;IAATA,uCAAS;;;ADDnC,OAAM,MAAOC,kBAAkB;EAG7BC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,WAAM,GAAiB,EAAE;IAG9BD,IAAI,CAACE,GAAG,CAAe,yBAAyB,GAAG,QAAQ,CAAC,CAACC,SAAS,CAACC,MAAM,IAAG;MAC9E,IAAI,CAACC,MAAM,GAAGD,MAAM;IACtB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;IAEjC,IAAIE,OAAO,GAAG,IAAIZ,cAAc,EAAE;IAClCY,OAAO,CAACC,eAAe,EAAE;EAG3B;;AAZWX,kBAAkB;mBAAlBA,kBAAkB,4DAGS,UAAU;AAAA;AAHrCA,kBAAkB;QAAlBA,kBAAkB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZ/BjB,6BAAoB;MAAAA,gCAAgB;MAAAA,iBAAK;MAEzCA,yBAAG;MAAAA,0EAA0D;MAAAA,iBAAI;MAEjEA,+DAAkD;MAElDA,uEAWQ;;;MAbJA,eAAqB;MAArBA,uEAAqB;MAEwCA,eAAmB;MAAnBA,wCAAmB","names":["SignalrService","i0","FetchDataComponent","constructor","http","baseUrl","get","subscribe","result","scenes","error","console","signalR","startConnection","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Project\\DmxLightV2\\LightMixerAngular\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts","C:\\Project\\DmxLightV2\\LightMixerAngular\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { SignalrService } from './SignalrService';\r\n\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public scenes: SceneModel[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<SceneModel[]>('https://localhost:7133/' + 'scenes').subscribe(result => {\r\n      this.scenes = result;\r\n    }, error => console.error(error));\r\n\r\n    var signalR = new SignalrService();\r\n    signalR.startConnection();\r\n    \r\n\r\n  }\r\n}\r\n\r\ninterface SceneModel {\r\n  \r\n  name: string;\r\n}\r\n","<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!scenes?.length\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"scenes.length\">\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let scene of scenes\">\r\n      <td>{{ scene.name }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}