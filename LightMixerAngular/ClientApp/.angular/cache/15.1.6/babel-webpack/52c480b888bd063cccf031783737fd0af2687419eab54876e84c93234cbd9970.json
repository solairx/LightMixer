{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nfunction ScenesComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ScenesComponent_table_3_tr_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const scene_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(scene_r3.name);\n  }\n}\nfunction ScenesComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"tbody\");\n    i0.ɵɵtemplate(6, ScenesComponent_table_3_tr_6_Template, 3, 1, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.scenes);\n  }\n}\nexport class ScenesComponent {\n  constructor(http, baseUrl) {\n    this.scenes = [];\n    http.get(environment.apiUrl + 'scenes').subscribe(result => {\n      this.scenes = result;\n    }, error => console.error(error));\n  }\n}\nScenesComponent.ɵfac = function ScenesComponent_Factory(t) {\n  return new (t || ScenesComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nScenesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ScenesComponent,\n  selectors: [[\"scenes\"]],\n  decls: 4,\n  vars: 3,\n  consts: [[\"id\", \"tableLabel\", \"back\", \"\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function ScenesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ScenesComponent_p_2_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(3, ScenesComponent_table_3_Template, 7, 1, \"table\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.TrackName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.scenes == null ? null : ctx.scenes.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.scenes.length);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,gCAAgC;;;;;ICC5DC,yBAA2B;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAS1CA,0BAAiC;IAC3BA,YAAgB;IAAAA,iBAAK;;;;IAArBA,eAAgB;IAAhBA,mCAAgB;;;;;IAR1BA,gCAAsF;IAG5EA,oBAAI;IAAAA,iBAAK;IAGjBA,6BAAO;IACLA,sEAEK;IACPA,iBAAQ;;;;IAHgBA,eAAS;IAATA,uCAAS;;;ADDnC,OAAM,MAAOC,eAAe;EAG1BC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,WAAM,GAAiB,EAAE;IAI9BD,IAAI,CAACE,GAAG,CAAeN,WAAW,CAACO,MAAM,GAAG,QAAQ,CAAC,CAClDC,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACC,MAAM,GAAGD,MAAM;IACtB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAIrC;;AAZWT,eAAe;mBAAfA,eAAe,4DAGY,UAAU;AAAA;AAHrCA,eAAe;QAAfA,eAAe;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV5BhB,6BAAyB;MAAAA,YAAa;MAAAA,iBAAK;MAE3CA,4DAAkD;MAElDA,oEAWQ;;;MAfiBA,eAAa;MAAbA,mCAAa;MAElCA,eAAqB;MAArBA,uEAAqB;MAEwCA,eAAmB;MAAnBA,wCAAmB","names":["environment","i0","ScenesComponent","constructor","http","baseUrl","get","apiUrl","subscribe","result","scenes","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Project\\DmxLightV2\\LightMixerAngular\\ClientApp\\src\\app\\scenes\\scenes.component.ts","C:\\Project\\DmxLightV2\\LightMixerAngular\\ClientApp\\src\\app\\scenes\\scenes.component.html"],"sourcesContent":["import { Component,  Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'scenes',\r\n  templateUrl: './scenes.component.html'\r\n})\r\nexport class ScenesComponent {\r\n  public scenes: SceneModel[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n\r\n    http.get<SceneModel[]>(environment.apiUrl + 'scenes')\r\n      .subscribe(result => {\r\n        this.scenes = result;\r\n      }, error => console.error(error));\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n\r\ninterface SceneModel {\r\n\r\n  name: string;\r\n}\r\n","\r\n<h1 id=\"tableLabel\" back>{{TrackName}}</h1>\r\n\r\n<p *ngIf=\"!scenes?.length\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"scenes.length\">\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let scene of scenes\">\r\n      <td>{{ scene.name }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}