{"ast":null,"code":"import * as signalR from '@microsoft/signalr';\nexport class SignalrService {\n  startConnection() {\n    var connection = new signalR.HubConnectionBuilder().withUrl('https://localhost:7133/hub', {\n      skipNegotiation: true,\n      transport: signalR.HttpTransportType.WebSockets\n    }).withAutomaticReconnect().build();\n    connection.start().then(() => {\n      console.log(\"connection established\");\n    }).catch(err => {\n      console.log(\"error occured\" + err);\n    });\n  }\n  listenToAllFeeds() {\n    this.hubConnection.on(\"GetFeed\", data => {\n      this.$allFeed.next(data);\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,OAAO,KAAKA,OAAO,MAAM,oBAAoB;AAG7C,OAAM,MAAOC,cAAc;EAIhBC,eAAe;IAElB,IAAIC,UAAU,GAAG,IAAIH,OAAO,CAACI,oBAAoB,EAAE,CAC9CC,OAAO,CAAC,4BAA4B,EAAE;MACnCC,eAAe,EAAE,IAAI;MACrBC,SAAS,EAAEP,OAAO,CAACQ,iBAAiB,CAACC;KACxC,CAAC,CACDC,sBAAsB,EAAE,CACxBC,KAAK,EAAE;IAGZR,UAAU,CAACS,KAAK,EAAE,CACbC,IAAI,CAAC,MAAK;MACPC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IAGzC,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAQ,IAAI;MAChBH,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGE,GAAG,CAAC;IAEtC,CAAC,CAAC;EACV;EAEOC,gBAAgB;IACH,IAAI,CAACC,aAAc,CAACC,EAAE,CAAC,SAAS,EAAGC,IAAU,IAAI;MAC7D,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACF,IAAI,CAAC;IAC5B,CAAC,CAAC;EACN","names":["signalR","SignalrService","startConnection","connection","HubConnectionBuilder","withUrl","skipNegotiation","transport","HttpTransportType","WebSockets","withAutomaticReconnect","build","start","then","console","log","catch","err","listenToAllFeeds","hubConnection","on","data","$allFeed","next"],"sourceRoot":"","sources":["C:\\Project\\DmxLightV2\\LightMixerAngular\\ClientApp\\src\\app\\fetch-data\\SignalrService.ts"],"sourcesContent":["import { HubConnection } from '@microsoft/signalr';\r\nimport * as signalR from '@microsoft/signalr';\r\n\r\n\r\nexport class SignalrService {\r\n\r\n    private hubConnection: any;\r\n\r\n    public startConnection() {\r\n\r\n        var connection = new signalR.HubConnectionBuilder()\r\n            .withUrl('https://localhost:7133/hub', {\r\n                skipNegotiation: true,\r\n                transport: signalR.HttpTransportType.WebSockets\r\n            })\r\n            .withAutomaticReconnect()\r\n            .build();\r\n\r\n\r\n        connection.start()\r\n            .then(() => {\r\n                console.log(\"connection established\");\r\n\r\n\r\n            })\r\n            .catch((err: any) => {\r\n                console.log(\"error occured\" + err);\r\n\r\n            });\r\n    }\r\n\r\n    public listenToAllFeeds() {\r\n        (<HubConnection>this.hubConnection).on(\"GetFeed\", (data: Feed) => {\r\n            this.$allFeed.next(data);\r\n        });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}