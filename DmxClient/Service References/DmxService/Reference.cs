//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DmxClient.DmxService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DmxService.IDmxService")]
    public interface IDmxService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDmxService/SetDmxChannel", ReplyAction="http://tempuri.org/IDmxService/SetDmxChannelResponse")]
        void SetDmxChannel(int channel, byte value);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDmxService/SetDmxChannel", ReplyAction="http://tempuri.org/IDmxService/SetDmxChannelResponse")]
        System.IAsyncResult BeginSetDmxChannel(int channel, byte value, System.AsyncCallback callback, object asyncState);
        
        void EndSetDmxChannel(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDmxServiceChannel : DmxClient.DmxService.IDmxService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DmxServiceClient : System.ServiceModel.ClientBase<DmxClient.DmxService.IDmxService>, DmxClient.DmxService.IDmxService {
        
        private BeginOperationDelegate onBeginSetDmxChannelDelegate;
        
        private EndOperationDelegate onEndSetDmxChannelDelegate;
        
        private System.Threading.SendOrPostCallback onSetDmxChannelCompletedDelegate;
        
        public DmxServiceClient() {
        }
        
        public DmxServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DmxServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DmxServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DmxServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetDmxChannelCompleted;
        
        public void SetDmxChannel(int channel, byte value) {
            base.Channel.SetDmxChannel(channel, value);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDmxChannel(int channel, byte value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDmxChannel(channel, value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSetDmxChannel(System.IAsyncResult result) {
            base.Channel.EndSetDmxChannel(result);
        }
        
        private System.IAsyncResult OnBeginSetDmxChannel(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int channel = ((int)(inValues[0]));
            byte value = ((byte)(inValues[1]));
            return this.BeginSetDmxChannel(channel, value, callback, asyncState);
        }
        
        private object[] OnEndSetDmxChannel(System.IAsyncResult result) {
            this.EndSetDmxChannel(result);
            return null;
        }
        
        private void OnSetDmxChannelCompleted(object state) {
            if ((this.SetDmxChannelCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDmxChannelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDmxChannelAsync(int channel, byte value) {
            this.SetDmxChannelAsync(channel, value, null);
        }
        
        public void SetDmxChannelAsync(int channel, byte value, object userState) {
            if ((this.onBeginSetDmxChannelDelegate == null)) {
                this.onBeginSetDmxChannelDelegate = new BeginOperationDelegate(this.OnBeginSetDmxChannel);
            }
            if ((this.onEndSetDmxChannelDelegate == null)) {
                this.onEndSetDmxChannelDelegate = new EndOperationDelegate(this.OnEndSetDmxChannel);
            }
            if ((this.onSetDmxChannelCompletedDelegate == null)) {
                this.onSetDmxChannelCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDmxChannelCompleted);
            }
            base.InvokeAsync(this.onBeginSetDmxChannelDelegate, new object[] {
                        channel,
                        value}, this.onEndSetDmxChannelDelegate, this.onSetDmxChannelCompletedDelegate, userState);
        }
    }
}
